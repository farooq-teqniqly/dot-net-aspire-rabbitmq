// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Producer.Database;

#nullable disable

namespace Producer.Database.Migrations.Producer
{
    [DbContext(typeof(ProducerDbContext))]
    partial class ProducerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Producer.Entities.OutboxMessage", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasColumnName("id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("content");

                    b.Property<string>("Error")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("error");

                    b.Property<DateTimeOffset>("OccurredOnUtc")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("occurred_on_utc");

                    b.Property<DateTimeOffset>("ProcessedOnUtc")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("processed_on_utc");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("pk_outbox_messages");

                    b.HasIndex("OccurredOnUtc", "ProcessedOnUtc")
                        .HasDatabaseName("ix_outbox_messages_occurred_on_utc_processed_on_utc")
                        .HasFilter("[processed_on_utc] IS NULL");

                    b.ToTable("outbox_messages", null, t =>
                        {
                            t.HasCheckConstraint("ck_outbox_messages_content_is_json", "ISJSON([content]) = 1");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
